%section.section-seven
  %header
    %h1 Highlights
    .pager#highlights-slider-control
      %li
        %a.active{:href => '#highlight-1'} 1
      %li 
        %a{:href => '#highlight-2'} 2
      %li
        %a{:href => '#highlight-3'} 3
      %li
        %a{:href => '#highlight-4'} 4
      %li
        %a{:href => '#highlight-5'} 5
      %li
        %a{:href => '#highlight-6'} 6
      %li
        %a{:href => '#highlight-7'} 7
      %li
        %a{:href => '#highlight-8'} 8
      %li
        %a{:href => '#highlight-9'} 9

  #highlights-slider-body

    %article#highlight-1
      .img-box
        %figure
          %img{:src => image_path('07-10.jpg'), :alt => 'img'}
          %figcaption
            Hotels Page waits for response from Hotel API

        %figure
          %img{:src => image_path('07-11.jpg'), :alt => 'img'}
          %figcaption
            Map with hotels and hotel details on Hotels Page

      .desc-box
        :markdown
          **Map displayed by default**  

          Hotels Page is the one when users need to wait a bit for available hotels fullfilling their search query. We wanted to make the loading time **less annoying** and we used map to that. We are loading map for queried location under the spinner, making the feel that **something is happening** and there is some progress. In addition we show tips, trying to teach users, not just waste their time.  

          We also wanted push users to use map as this is **perfect way** to find their hotels. So we decided to show the map with hotels by default. We added search by location feature to easily take user to prefered city region, which also works as filter. Each step user takes on Hotels Page leads her to **best fitted offer**.
          
        %a.button{:href => '#highlight-2'} next &raquo;

    %article#highlight-2
      .img-box
        %figure
          %img{:src => image_path('07-20.jpg'), :alt => 'img'}
          %figcaption
            Shortlist switcher on Top Bar follows you and gives you info about how many hotels are currently on your Shortlist

      .desc-box
        :markdown
          **Shortlist**  

          When browsing through list of hotels users often find some **good looking offers**. Now they can add them to *Shortlist* and compare them later. This feature works as filter and **helps users** to concentrate on selected offers.

        %a.button{:href => '#highlight-3'} next &raquo;

    %article#highlight-3
      .img-box
        %figure
          %img{:src => image_path('07-30.jpg'), :alt => 'img'}
          %figcaption
            Step 1. Initial concept from graphic designer
        %figure
          %img{:src => image_path('07-31.jpg'), :alt => 'img'}
          %figcaption
            Step 2a. After explaining how it should work :)
        %figure
          %img{:src => image_path('07-32.jpg'), :alt => 'img'}
          %figcaption
            Step 2b. Concept of box with longer description
        %figure
          %img{:src => image_path('07-33.jpg'), :alt => 'img'}
          %figcaption
            Step 3. Box with all posible features enabled! Finall design.

        %a.button{:href => '#highlight-4'} next &raquo;

      .desc-box
        :markdown
          **Single hotel item on the list**  

          This is simplified story of how we **iterated** with single hotel box design and what we achieved at the end.

        %a.button{:href => '#highlight-4'} next &raquo;

    %article#highlight-4
      .img-box
        %figure
          %img{:src => image_path('07-40.jpg'), :alt => 'img'}
          %figcaption
            When you scroll down Hotel Page the navigation is always with you

      .desc-box
        :markdown
          **Page navigation on Hotel Page**  

          As I mentioned before Hotel Page was **completely redesigned**. I decided to build one, long template in a bit **magazine layout**. Each section is nicely composed with others. I added page navigation to easily scroll between sections and **highlight** current window position. I wrote [jquery.on-page-navigator](https://github.com/krzysu/jquery.plugins) and [jquery.positioner](https://github.com/krzysu/jquery.positioner) for this purpose.

        %a.button{:href => '#highlight-5'} next &raquo;

    %article#highlight-5
      .img-box
        %figure
          %img{:src => image_path('07-50.jpg'), :alt => 'img'}
          %figcaption
            New photo gallery on Hotel Page in action

      .desc-box
        :markdown
          **New photo gallery**  

          I redesigned the photo gallery to **be more usable**. Users mostly want to get overview of the hotel as quick as possible and if it doesn't fit their criteria switch to another one. The old gallery forces users to click on each photo. With new gallery user can have overview of the hotel just **hovering over the thumbnails**. 

        %a.button{:href => '#highlight-6'} next &raquo;

    %article#highlight-6
      .img-box
        %figure
          %img{:src => image_path('07-60.jpg'), :alt => 'img'}
          %figcaption
            At the bottom of Hotel Page user can find Similar Hotels section, on the screen you can see that backend hadn't supported this feature when the screenshot was taken :)

      .desc-box
        :markdown
          **Similar hotels section**  

          This is taken from e-commerce and fits here as well as booking hotel is **similar to online shopping**. I introduced *Similar Hotels* section at the end of Hotel Page to **guide user** to other interesting offers for her if she found something unsuitable in the browsed one. 

        %a.button{:href => '#highlight-7'} next &raquo;

    %article#highlight-7
      .img-box
        %figure
          %img{:src => image_path('07-70.jpg'), :alt => 'img'}
          %figcaption
            Payment details section on Payment Page
            

      .desc-box
        :markdown
          **User friendly forms**  

          I know how important is **not to lose potential customer** in last steps of checkout process so **we guide users** gently through short fieldsets. We clearly inform why we need such data and what user should expect on the next page. When validation fails the window is scrolled to first invalid field.


        %a.button{:href => '#highlight-8'} next &raquo;

    %article#highlight-8
      .img-box
        %figure
          .img-seven-08
          %figcaption this is what IE6 user sees when visiting Hotel application 

      .desc-box
        :markdown
          **IE6 not supported but still user friendly**  

          We decided **not to waste time** for IE6 support as it was only **0.67%** of our users in previous three months. So I just did screen with proper information.  

          All other popular browsers are supported including IE7+, Firefox 3+, Chrome, Safari and Opera. It also **works great on tablets**.
          
        %a.button{:href => '#highlight-9'} next &raquo;
      
    %article#highlight-9
      .img-box
        %figure
          %img{:src => image_path('07-90.jpg'), :alt => 'img'}
          %figcaption
            Application is also usable on narrower screens

      .desc-box
        :markdown
          **Fluid layout between 720 and 1100px**

          Responsive design wasn't our goal, as we targeted **only desktop users**, but our application is used by different clients and needs to be adjusted to look and feel of client's portals. Some of them even put our IBE in iframe. I had some issues with that in the past so now I decided to make the layout fluid to **better fit different widths** of our client's sites. 

        

  